{"version":3,"sources":["components/Navbar/index.jsx","components/CitesTable/SearchToolbar.jsx","components/CitesTable/CitesPagination.jsx","components/CitesTable/CitesTableHead.jsx","components/CitesTable/cites.js","components/CitesTable/CiteRow.jsx","components/CitesTable/CitesTableBody.jsx","components/CitesTable/CitesTable.jsx","components/CitesForm/CiteForm.jsx","views/Cites.jsx","views/login/styles.jsx","views/login/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["index","AppBar","position","color","Container","Toolbar","IconButton","edge","aria-label","Typography","variant","SearchToolbar","filter","component","Grid","container","justify","item","xs","sm","FormControl","OutlinedInput","value","get","onChange","event","set","target","placeholder","endAdornment","InputAdornment","CitesPagination","props","count","page","rowsPerPage","TableFooter","TableRow","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","head","CitesTableHead","TableHead","map","el","TableCell","key","tableHeaders","filterRows","data","setCount","element","row","cont","forEach","includes","filterRow","length","start","end","slice","date","cite","requested","signed","addressed","reference","CiteRow","name","CitesTableBody","rows","TableBody","CitesTable","useState","setFilter","setPage","setRowsPerPage","paginationArgs","filterArgs","Paper","TableContainer","Table","CiteForm","Cites","useStyles","makeStyles","theme","div","display","alignItems","marginTop","spacing","avatar","background","margin","form","gridGap","title","textAlign","progress","schema","yup","shape","email","required","password","min","Login","history","useHistory","classes","loading","setLoading","useForm","resolver","yupResolver","handleSubmit","register","errors","onSubmit","a","console","log","axios","post","response","localStorage","setItem","token","push","className","maxWidth","Avatar","LockOutlined","field","TextField","label","fullWidth","helperText","message","error","inputRef","Button","type","disabled","CircularProgress","size","App","Box","style","backgroundColor","minHeight","Navbar","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9f778558.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Container,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst index = () => {\n  return (\n    <AppBar position=\"sticky\" color=\"primary\">\n      <Container>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">Comision</Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default index;\n","import React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {\n  Toolbar,\n  Typography,\n  OutlinedInput,\n  FormControl,\n  InputAdornment,\n  Grid,\n  IconButton,\n} from \"@material-ui/core\";\nconst SearchToolbar = ({ filter }) => {\n  const handleFilter = (event) => {\n    filter.set(event.target.value);\n  };\n  return (\n    <Toolbar component={Grid} container justify=\"space-between\">\n      <Typography variant=\"h6\" component={Grid} item xs={12} sm={4}>\n        Lista de Cites\n      </Typography>\n      <FormControl component={Grid} item xs={12} sm={3}>\n        <OutlinedInput\n          value={filter.get}\n          onChange={handleFilter}\n          placeholder=\"Buscar\"\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton>\n                <SearchIcon />\n              </IconButton>\n            </InputAdornment>\n          }\n        ></OutlinedInput>\n      </FormControl>\n    </Toolbar>\n  );\n};\n\nexport default SearchToolbar;\n","import React from \"react\";\nimport { TableFooter, TableRow, TablePagination } from \"@material-ui/core\";\n\nconst CitesPagination = (props) => {\n  const { count, page, rowsPerPage } = props;\n  const handleChangeRowsPerPage = (event) => {\n    rowsPerPage.set(parseInt(event.target.value, 10));\n    page.set(0);\n  };\n  const handleChangePage = (event, newPage) => {\n    page.set(newPage);\n  };\n  return (\n    <TableFooter>\n      <TableRow>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          count={count}\n          rowsPerPage={rowsPerPage.get}\n          page={page.get}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        ></TablePagination>\n      </TableRow>\n    </TableFooter>\n  );\n};\n\nexport default CitesPagination;\n","import React from \"react\";\nimport { TableHead, TableRow, TableCell } from \"@material-ui/core\";\nlet head = [\n  \"Fecha\",\n  \"Cite\",\n  \"Solicitado por\",\n  \"Firmado Por\",\n  \"Dirigido a\",\n  \"Referencia\",\n];\nconst CitesTableHead = () => {\n  return (\n    <TableHead>\n      <TableRow></TableRow>\n      <TableRow>\n        {head.map((el, index) => (\n          <TableCell key={index}>{el}</TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default CitesTableHead;\n","//nombres de las filas\nexport let tableHeaders = [\n  \"date\",\n  \"cite\",\n  \"requested\",\n  \"addressed\",\n  \"signed\",\n  \"reference\",\n];\n//devuelve un booleano de si la fila pasa o no el filtro\nfunction filterRow(row, filter) {\n  let cont = 0;\n  tableHeaders.forEach((element) => {\n    row[element].includes(filter) && cont++;\n  });\n  return cont !== 0;\n}\n//Funcion que devuelve\nexport const filterRows = ({ data, filter, page, rowsPerPage, setCount }) => {\n  // let filterRows = data.slice();\n  filter !== \"\" &&\n    (data = data.filter((element) => filterRow(element, filter)));\n  setCount(data.length);\n  const start = page * rowsPerPage;\n  const end = start + rowsPerPage;\n  return data.slice(start, end);\n};\n// Devuelve los datos de paginacion de la tabla\nexport function pagination({\n  count,\n  page,\n  setPage,\n  rowsPerPage,\n  setRowsPerPage,\n}) {\n  return {\n    count: count,\n    page: { get: page, set: setPage },\n    rowsPerPage: { get: rowsPerPage, set: setRowsPerPage },\n  };\n}\n\nexport const data = [\n  {\n    date: \"20-05-2020\",\n    cite: \"403\",\n    requested: \"Un wey\",\n    signed: \"Otro wey\",\n    addressed: \"Tu papa\",\n    reference: \"Porque no me deja completar el lorem ipsum\",\n  },\n  {\n    date: \"20-05-2020\",\n    cite: \"404\",\n    requested: \"Un wey\",\n    signed: \"Otro wey\",\n    addressed: \"Tu papa\",\n    reference: \"Porque no me deja completar el lorem ipsum\",\n  },\n  {\n    date: \"20-05-2020\",\n    cite: \"405\",\n    requested: \"Un wey\",\n    signed: \"El wey\",\n    addressed: \"Su papa\",\n    reference:\n      \"Porque no me deja completar el lorem ipsum Porque no me deja completar el lorem ipsum\",\n  },\n  {\n    date: \"20-05-2020\",\n    cite: \"403\",\n    requested: \"Un wey\",\n    signed: \"Otro wey\",\n    addressed: \"Tu papa\",\n    reference: \"Porque no me deja completar el lorem ipsum\",\n  },\n  {\n    date: \"20-05-2020\",\n    cite: \"404\",\n    requested: \"Un wey\",\n    signed: \"Otro wey\",\n    addressed: \"Tu papa\",\n    reference: \"Porque no me deja completar el lorem ipsum\",\n  },\n  {\n    date: \"20-05-2020\",\n    cite: \"405\",\n    requested: \"Un wey\",\n    signed: \"El wey\",\n    addressed: \"Su papa\",\n    reference:\n      \"Porque no me deja completar el lorem ipsum Porque no me deja completar el lorem ipsum\",\n  },\n];\n","import React from \"react\";\nimport { TableRow, TableCell } from \"@material-ui/core\";\nimport { tableHeaders } from \"./cites\";\n\nconst CiteRow = ({ row }) => {\n  return (\n    <TableRow>\n      {tableHeaders.map((name) => (\n        <TableCell key={name}>{row[name]}</TableCell>\n      ))}\n    </TableRow>\n  );\n};\n\nexport default CiteRow;\n","import React from \"react\";\nimport CiteRow from \"./CiteRow\";\nimport { TableBody } from \"@material-ui/core\";\n\nconst CitesTableBody = ({ rows }) => {\n  return (\n    <TableBody>\n      {rows().map((row, index) => (\n        <CiteRow row={row} key={index} />\n      ))}\n    </TableBody>\n  );\n};\n\nexport default CitesTableBody;\n","import React, { useState } from \"react\";\nimport { Paper, TableContainer, Table } from \"@material-ui/core\";\nimport SearchToolbar from \"./SearchToolbar\";\nimport CitesPagination from \"./CitesPagination\";\nimport CitesTableHead from \"./CitesTableHead\";\nimport CitesTableBody from \"./CitesTableBody\";\nimport { filterRows, pagination, data } from \"./cites\";\n// import Axios from \"axios\";\n\nfunction CitesTable() {\n  const [filter, setFilter] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [count, setCount] = useState(data.length);\n  let paginationArgs = { count, page, setPage, rowsPerPage, setRowsPerPage };\n  // let data = await Axios.get(\n  //   \"https://us-central1-comision-de-justicia.cloudfunctions.net/api \"\n  // );\n  let filterArgs = { data, filter, page, rowsPerPage, setCount };\n\n  return (\n    <Paper>\n      <SearchToolbar filter={{ get: filter, set: setFilter }} />\n      <TableContainer>\n        <Table>\n          <CitesTableHead />\n          <CitesTableBody rows={() => filterRows(filterArgs)} />\n          <CitesPagination {...pagination(paginationArgs)} />\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\nexport default CitesTable;\n","import React from \"react\";\n\nconst CiteForm = () => {\n  return (\n    <div>\n      <h1>Cites Form</h1>\n    </div>\n  );\n};\n\nexport default CiteForm;\n","import React from \"react\";\nimport { Grid, Container } from \"@material-ui/core\";\nimport CitesTable from \"../components/CitesTable/CitesTable\";\nimport CiteForm from \"../components/CitesForm/CiteForm\";\n\nconst Cites = () => {\n  return (\n    <Container>\n      <Grid>\n        <CiteForm />\n        <CitesTable />\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Cites;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  div: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(10)\n  },\n  container: {},\n  avatar: {\n    background: \"red\",\n    margin: \"auto\",\n  },\n  form: {\n    display: 'grid',\n    gridGap: '20px'\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  progress: {\n    position: \"absolute\",\n  },\n}));","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Avatar,\n  Typography,\n  Button,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { LockOutlined } from \"@material-ui/icons\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport { useStyles } from \"./styles.jsx\"\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(8),\n});\n\n\n\nconst Login = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const { handleSubmit, register, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = async (data) => {\n    setLoading(true);\n    console.log(data);\n    try {\n      let response = await axios.post(\"/login\", data);\n      localStorage.setItem(\"AuthToken\", `Bearer ${response.data.token}`);\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className={classes.div}>\n        <Container className={classes.container} maxWidth=\"xs\">\n          <Avatar className={classes.avatar}>\n            <LockOutlined />\n          </Avatar>\n          <Typography className={classes.title} variant=\"h5\">\n            Login\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n            {[\"email\", \"password\"].map((field) => (\n              <TextField\n                key={field}\n                variant=\"outlined\"\n                label={field}\n                name={field}\n                fullWidth\n                helperText={errors[field]?.message}\n                error={errors[field] ? true : false}\n                inputRef={register}\n              />\n            ))}\n\n            <Button\n              margin=\"normal\"\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n            >\n              Sign In\n              {loading && (\n                <CircularProgress size={30} className={classes.progress} />\n              )}\n            </Button>\n          </form>\n        </Container>\n    </div>\n  );\n};\n\nexport default Login;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Container, Box } from \"@material-ui/core\";\nimport Navbar from \"./components/Navbar\";\nimport Cites from \"./views/Cites\";\nimport Login from \"./views/login/Login\";\n\nfunction App() {\n  const boxStyle = { backgroundColor: \"#F5F5F5\", minHeight: \"100vh\" };\n  return (\n    <Router>\n      <Box style={boxStyle}>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/\">\n            <Container>\n              <Cites />\n            </Container>\n          </Route>\n        </Switch>\n      </Box>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}