{"version":3,"sources":["components/Navbar/index.jsx","components/CitesTable/SearchToolbar.jsx","components/CitesTable/CitesPagination.jsx","components/CitesTable/CitesTableHead.jsx","components/CitesTable/CiteRow.jsx","components/CitesTable/CitesTableBody.jsx","components/CitesTable/CitesTable.jsx","views/Cites.jsx","App.js","serviceWorker.js","index.js"],"names":["index","AppBar","position","color","Container","Toolbar","IconButton","edge","aria-label","Typography","variant","SearchToolbar","filter","component","Grid","container","justify","item","xs","sm","FormControl","OutlinedInput","value","get","onChange","event","set","target","placeholder","endAdornment","InputAdornment","CitesPagination","props","count","page","rowsPerPage","TableFooter","TableRow","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","head","CitesTableHead","TableHead","map","el","TableCell","key","CiteRow","date","cite","requested","signed","addressed","reference","CitesTableBody","rows","TableBody","row","CitesTable","useState","setFilter","setPage","setRowsPerPage","data","length","setCount","pagination","Paper","TableContainer","Table","filterRows","slice","element","cont","forEach","includes","filtrar","Cites","App","Navbar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ff13103.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Container,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst index = () => {\n  return (\n    <AppBar position=\"sticky\" color=\"primary\">\n      <Container>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">Comision</Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default index;\n","import React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {\n  Toolbar,\n  Typography,\n  OutlinedInput,\n  FormControl,\n  InputAdornment,\n  Grid,\n  IconButton,\n} from \"@material-ui/core\";\nconst SearchToolbar = ({ filter }) => {\n  const handleFilter = (event) => {\n    filter.set(event.target.value);\n  };\n  return (\n    <Toolbar component={Grid} container justify=\"space-between\">\n      <Typography variant=\"h6\" component={Grid} item xs={12} sm={4}>\n        Lista de Cites\n      </Typography>\n      <FormControl component={Grid} item xs={12} sm={3}>\n        <OutlinedInput\n          value={filter.get}\n          onChange={handleFilter}\n          placeholder=\"Buscar\"\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton>\n                <SearchIcon />\n              </IconButton>\n            </InputAdornment>\n          }\n        ></OutlinedInput>\n      </FormControl>\n    </Toolbar>\n  );\n};\n\nexport default SearchToolbar;\n","import React from \"react\";\nimport { TableFooter, TableRow, TablePagination } from \"@material-ui/core\";\n\nconst CitesPagination = (props) => {\n  const { count, page, rowsPerPage } = props;\n  const handleChangeRowsPerPage = (event) => {\n    rowsPerPage.set(parseInt(event.target.value, 10));\n    page.set(0);\n  };\n  const handleChangePage = (event, newPage) => {\n    page.set(newPage);\n  };\n  return (\n    <TableFooter>\n      <TableRow>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          count={count}\n          rowsPerPage={rowsPerPage.get}\n          page={page.get}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        ></TablePagination>\n      </TableRow>\n    </TableFooter>\n  );\n};\n\nexport default CitesPagination;\n","import React from \"react\";\nimport { TableHead, TableRow, TableCell } from \"@material-ui/core\";\nlet head = [\n  \"Fecha\",\n  \"Cite\",\n  \"Solicitado por\",\n  \"Firmado Por\",\n  \"Dirigido a\",\n  \"Referencia\",\n];\nconst CitesTableHead = () => {\n  return (\n    <TableHead>\n      <TableRow></TableRow>\n      <TableRow>\n        {head.map((el, index) => (\n          <TableCell key={index}>{el}</TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nexport default CitesTableHead;\n","import React from \"react\";\nimport { TableRow, TableCell } from \"@material-ui/core\";\n\nconst CiteRow = ({ date, cite, requested, signed, addressed, reference }) => {\n  return (\n    <TableRow>\n      <TableCell>{date}</TableCell>\n      <TableCell>{cite}</TableCell>\n      <TableCell>{requested}</TableCell>\n      <TableCell>{signed}</TableCell>\n      <TableCell>{addressed}</TableCell>\n      <TableCell>{reference}</TableCell>\n    </TableRow>\n  );\n};\n\nexport default CiteRow;\n","import React from \"react\";\nimport CiteRow from \"./CiteRow\";\nimport { TableBody } from \"@material-ui/core\";\n\nconst CitesTableBody = ({ rows }) => {\n  return (\n    <TableBody>\n      {rows().map((row, index) => (\n        <CiteRow {...row} key={index} />\n      ))}\n    </TableBody>\n  );\n};\n\nexport default CitesTableBody;\n","import React, { useState } from \"react\";\nimport { Paper, TableContainer, Table } from \"@material-ui/core\";\nimport SearchToolbar from \"./SearchToolbar\";\nimport CitesPagination from \"./CitesPagination\";\nimport CitesTableHead from \"./CitesTableHead\";\nimport CitesTableBody from \"./CitesTableBody\";\n\nfunction CitesTable() {\n  const [filter, setFilter] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  let data = [\n    {\n      date: \"20-05-2020\",\n      cite: \"403\",\n      requested: \"Un wey\",\n      signed: \"Otro wey\",\n      addressed: \"Tu papa\",\n      reference: \"Porque no me deja completar el lorem ipsum\",\n    },\n    {\n      date: \"20-05-2020\",\n      cite: \"404\",\n      requested: \"Un wey\",\n      signed: \"Otro wey\",\n      addressed: \"Tu papa\",\n      reference: \"Porque no me deja completar el lorem ipsum\",\n    },\n    {\n      date: \"20-05-2020\",\n      cite: \"405\",\n      requested: \"Un wey\",\n      signed: \"El wey\",\n      addressed: \"Su papa\",\n      reference:\n        \"Porque no me deja completar el lorem ipsum Porque no me deja completar el lorem ipsum\",\n    },\n    {\n      date: \"20-05-2020\",\n      cite: \"403\",\n      requested: \"Un wey\",\n      signed: \"Otro wey\",\n      addressed: \"Tu papa\",\n      reference: \"Porque no me deja completar el lorem ipsum\",\n    },\n    {\n      date: \"20-05-2020\",\n      cite: \"404\",\n      requested: \"Un wey\",\n      signed: \"Otro wey\",\n      addressed: \"Tu papa\",\n      reference: \"Porque no me deja completar el lorem ipsum\",\n    },\n    {\n      date: \"20-05-2020\",\n      cite: \"405\",\n      requested: \"Un wey\",\n      signed: \"El wey\",\n      addressed: \"Su papa\",\n      reference:\n        \"Porque no me deja completar el lorem ipsum Porque no me deja completar el lorem ipsum\",\n    },\n  ];\n  const [count, setCount] = useState(data.length);\n  const rows = () => {\n    const filtrar = (row) => {\n      let cont = 0;\n      let names = [\n        \"date\",\n        \"cite\",\n        \"requested\",\n        \"addressed\",\n        \"signed\",\n        \"reference\",\n      ];\n      names.forEach((element) => {\n        row[element].includes(filter) && cont++;\n      });\n      return cont !== 0;\n    };\n    let filterRows = data.slice();\n    if (filter !== \"\") {\n      filterRows = filterRows.filter((element) => filtrar(element));\n      setCount(filterRows.length);\n    }\n    return filterRows.slice(\n      page * rowsPerPage,\n      page * rowsPerPage + rowsPerPage\n    );\n  };\n  let pagination = {\n    count: count,\n    page: { get: page, set: setPage },\n    rowsPerPage: { get: rowsPerPage, set: setRowsPerPage },\n  };\n\n  return (\n    <Paper>\n      <SearchToolbar filter={{ get: filter, set: setFilter }} />\n      <TableContainer>\n        <Table>\n          <CitesTableHead />\n          <CitesTableBody rows={rows} />\n          <CitesPagination {...pagination} />\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\nexport default CitesTable;\n","import React from \"react\";\nimport { Grid, Container } from \"@material-ui/core\";\nimport CitesTable from \"../components/CitesTable/CitesTable\";\n\nconst Cites = () => {\n  return (\n    <Container>\n      <Grid>\n        <CitesTable />\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Cites;\n","import React, { Fragment } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport Navbar from \"./components/Navbar\";\nimport Cites from \"./views/Cites\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Navbar />\n      <Container>\n        <Cites />\n      </Container>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}